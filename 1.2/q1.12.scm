(define (pascal row col)
  (cond ((< row col) #f)
        ((= col 1) 1)
        ((= row col) 1)
        (else (+ (pascal (- row 1) (- col 1))
                 (pascal (- row 1) col)))))

(define (display-pascal-row row)
  (define (display-pascal-row-iter col)
    (cond ((<= col row)
           (display (pascal row col))
           (display " ")
           (display-pascal-row-iter (+ col 1)))))
  (display-pascal-row-iter 1))

(define (display-pascal-triangle max-row)
  (define (display-pascal-triangle-iter row)
    (cond ((<= row max-row)
           (display-pascal-row row)
           (display "\n")
           (display-pascal-triangle-iter (+ row 1)))))
  (display-pascal-triangle-iter 1))
